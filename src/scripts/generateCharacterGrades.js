import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Read the JSON file
const jsonPath = path.join(__dirname, '../data/hanzi_grades.json');
const tsPath = path.join(__dirname, '../data/characterGrades.ts');

console.log('Reading from:', jsonPath);
const jsonContent = fs.readFileSync(jsonPath, 'utf-8');
const grades = JSON.parse(jsonContent);

// Log the structure of the data
console.log('Grades structure:', Object.keys(grades));
console.log('Number of characters per grade:');
Object.entries(grades).forEach(([grade, chars]) => {
  console.log(`${grade}: ${chars.length} characters`);
});

// Generate TypeScript content
const tsContent = `// This file is auto-generated from hanzi_grades.json
// Do not edit this file directly

export interface CharacterGrades {
  'grade-1': string[];
  'grade-2': string[];
  'grade-3': string[];
  'grade-4': string[];
  'grade-5': string[];
  'grade-6': string[];
}

export const characterGrades: CharacterGrades = ${JSON.stringify(grades, null, 2)};

/**
 * Get the grade level of a character (1-6).
 * Returns 7 if the character is not found in any grade.
 */
export function getCharacterGrade(char: string): number {
  for (let i = 1; i <= 6; i++) {
    const gradeKey = \`grade-\${i}\` as keyof CharacterGrades;
    if (characterGrades[gradeKey].includes(char)) {
      return i;
    }
  }
  return 7;  // Character not found in any grade
}
`;

// Write TypeScript file
fs.writeFileSync(tsPath, tsContent);
console.log(`Generated ${tsPath} with character grades data`); 